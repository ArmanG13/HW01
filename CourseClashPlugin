import ij.ImagePlus;
import ij.ImageStack;
import ij.plugin.PlugIn;
import ij.process.BinaryProcessor;
import ij.process.ImageProcessor;
import ij.process.StackConverter;
import ij.gui.NewImage;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class CourseClashPlugin implements PlugIn {
    
    public void run(String arg) {
        
        int N = readCRSFileAndGetN(C:\Users\agasparyan\Desktop\hec-s-92.crs);

        
        ImageProcessor binaryProcessor = createBinaryProcessor(N);
        readStuFileAndColorPixels(C:\Users\agasparyan\Desktop\hec-s-92.stu, binaryProcessor);
        ImagePlus binaryImagePlus = new ImagePlus("Clashing Courses Image", binaryProcessor);
        binaryImagePlus.show();
    }

    private int readCRSFileAndGetN(String filePath) {
        int numberOfCourses = 0;
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                numberOfCourses = Integer.parseInt(line.trim());
            }
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
        }
        return numberOfCourses;
    }

    private ImageProcessor createBinaryProcessor(int N) {
        ImageProcessor binaryProcessor = new BinaryProcessor(N, N);
        binaryProcessor.setValue(255); 
        binaryProcessor.fill();
        return binaryProcessor;
    }

    private void readStuFileAndColorPixels(String filePath, ImageProcessor binaryProcessor) {
        try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
            String line;
            while ((line = br.readLine()) != null) {
                String[] tokens = line.trim().split("\\s+");
                if (tokens.length >= 2) {
                    int x = Integer.parseInt(tokens[0]);
                    int y = Integer.parseInt(tokens[1]);
                    binaryProcessor.putPixelValue(x, y, 0); 
                }
            }
        } catch (IOException | NumberFormatException e) {
            e.printStackTrace();
        }
    }
}
